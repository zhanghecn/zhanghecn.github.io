(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{430:function(t,n,s){"use strict";s.r(n);var a=s(62),r=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"堆栈与函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#堆栈与函数"}},[t._v("#")]),t._v(" 堆栈与函数")]),t._v(" "),s("h2",{attrs:{id:"堆栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#堆栈"}},[t._v("#")]),t._v(" 堆栈")]),t._v(" "),s("p",[t._v("堆栈是一种数据结构(LIFO last-in first outer) 后进先出")]),t._v(" "),s("p",[s("strong",[t._v("运行时的堆栈")])]),t._v(" "),s("p",[t._v("运行时的堆栈是一个数组 CPU用寄存器的ESP（堆栈指针 stack pointer register）来进行管理")]),t._v(" "),s("p",[t._v("32位模式下，esp寄存器存放的是堆栈中某个位置的32位偏移量 esp基本不会被人为控制,\n它是用于call ret push pop 等函数指令间接修改")]),t._v(" "),s("ol",[s("li",[t._v("入栈:")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/img_5.png'",alt:"img"}}),t._v('" alt="foo">')]),t._v(" "),s("p",[t._v("32位的栈的指针隔着4字节的地址 每入栈一个esp就指向那个一个")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("出栈:")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/img_6.png'",alt:"img"}}),t._v('" alt="foo">')]),t._v(" "),s("blockquote",[s("p",[t._v("堆栈可为局部变量提供临时存储区")])]),t._v(" "),s("blockquote",[s("p",[t._v("调用函数过程的时候,输入的参数也可通过压入堆栈来传递")])]),t._v(" "),s("blockquote",[s("p",[t._v("执行call 函数的时候,cpu在堆栈中保持ret返回的地址")])]),t._v(" "),s("blockquote",[s("p",[t._v("也可用来撤销之前的操作")])]),t._v(" "),s("blockquote",[s("p",[t._v("汇编理的栈的最大空间为64kb")])]),t._v(" "),s("h2",{attrs:{id:"push-和-pop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#push-和-pop"}},[t._v("#")]),t._v(" push 和 pop")]),t._v(" "),s("p",[t._v("栈的初始esp指针是指向高位的,每添加一个指针 esp即增加,反之减少")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("push 指令\npush指令压入一个内容值,随之esp指针增加\n另外还有一个pushfd 压入eflags的状态寄存器内容")])]),t._v(" "),s("li",[s("p",[t._v("pop 指令\npop指令弹出esp指针对应的内容,切且esp减少\n另外还有一个 popfd 恢复eflags 状态寄存器内容")])]),t._v(" "),s("li",[s("p",[t._v("ad(all directive)指令\npushad 压入所有寄存器(eax,ecx,edx,ebx,esp(执行之前的指针),ebp,esi,edi);\npopad 相反顺序寄存器弹出堆栈")])]),t._v(" "),s("li",[s("p",[t._v("示例\n下面是讲一个数组的数字通过栈的后进先出策略反转数据")])])]),t._v(" "),s("ul",[s("li",[t._v("asm")])]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data\nnarray dword "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code \nreversal proc\nmov rcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("lengthof narray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取长度")]),t._v("\nmov rsi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("offset narray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmov rdi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rsi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//存栈")]),t._v("\nL1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n movzx rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("byte ptr "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("rdi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//左侧填充0  如: 00000001")]),t._v("\n add rdi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//地址偏移++")]),t._v("\n push rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//存栈")]),t._v("\nloop L1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmov rcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("lengthof narray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmov rdi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rsi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//弹出值获取")]),t._v("\nL2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n pop rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n mov "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("rdi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n add rdi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nloop L2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取指针")]),t._v("\nmov rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rsi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nreversal endp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("c++")])]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reversal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" array "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reversal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tcout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("输出结果:"),s("code",[t._v("654321")])]),t._v(" "),s("h2",{attrs:{id:"call"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#call"}},[t._v("#")]),t._v(" call")]),t._v(" "),s("p",[t._v("call指令用来调用一个过程 先把当前下一步的esp的指针push到栈里面\n调用call的时候eip此时是call里面的指针\ncall在执行到ret的时候,此时就会把栈里面的esp指针内的返回地址pop\n到eip里面接着往下执行")]),t._v(" "),s("p",[t._v("如下所示:")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("     main PROC\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00000020")]),t._v("  call MySub"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("等于push eip jmp MySub\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00000025")]),t._v("  mov eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ebx\n")])])]),s("p",[s("img",{attrs:{src:"/img_7.png'",alt:"img"}}),t._v('" alt="foo">')]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("   MySub PROC\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00000040")]),t._v(" mov eaxz edx\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n      ret "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("ret会 pop 返回地址"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00000025")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("原EIP"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 的地方接着执行 \n   MySub END\n")])])]),s("img",{attrs:{src:t.$withBase("/img_9.png"),alt:"foo"}}),t._v(" "),s("ol",[s("li",[t._v("传参示例:\n下面是传入一个数组并求和")])]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),s("p",[t._v("观察寄存器得到参数分别是ecx和edx")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("callStackT proc\n\tcall mm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tmov eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ebx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tcallStackT endp\n\n\tdosum proc\n\tmov rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("备份\n\tpush rsi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tpush rcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\tL1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t add rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("rsi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t add rsi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("type dword"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t loop L1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("还原 rsi rcx \n\tpop rcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tpop rsi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\tret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndosum endp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nsum proc\n\tmov rsi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tmov rcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tcall dosum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tcall dosum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nsum endp\n")])])]),s("p",[t._v("结果输出为:"),s("code",[t._v("15")])]),t._v(" "),s("h2",{attrs:{id:"调用内置链接库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调用内置链接库"}},[t._v("#")]),t._v(" 调用内置链接库")]),t._v(" "),s("p",[t._v("对于windows而言，内置了一些函数库：\n"),s("table",[s("tbody",[s("tr",[s("th",[t._v("\n过程")]),t._v(" "),s("th",[t._v("\n说明")])]),t._v(" "),s("tr",[s("td",[t._v("\nCloseFile")]),t._v(" "),s("td",[t._v("\n关闭之前已经打开的磁盘文件")])]),t._v(" "),s("tr",[s("td",[t._v("\nClrscr")]),t._v(" "),s("td",[t._v("\n清除控制台窗口，并将光标置于左上角")])]),t._v(" "),s("tr",[s("td",[t._v("\nCreateOutputFile")]),t._v(" "),s("td",[t._v("\n为输出模式下的写操作创建一个新的磁盘文件")])]),t._v(" "),s("tr",[s("td",[t._v("\nCrlf")]),t._v(" "),s("td",[t._v("\n在控制台窗口中写一个行结束的序列")])]),t._v(" "),s("tr",[s("td",[t._v("\nDelay")]),t._v(" "),s("td",[t._v("\n程序执行暂停指定的 n 毫秒")])]),t._v(" "),s("tr",[s("td",[t._v("\nDumpMem")]),t._v(" "),s("td",[t._v("\n以十六进制形式，在控制台窗口写一个内存块")])]),t._v(" "),s("tr",[s("td",[t._v("\nDumpRegs")]),t._v(" "),s("td",[t._v("\n以十六进制形式显示 EAX、EEX、ECX、EDX、ESI、EDI、EBP、ESP、EFLAGS 和 EIP 寄存器。也显示最常见的 CPU 状态标志位")])]),t._v(" "),s("tr",[s("td",[t._v("\nGetCommandTail")]),t._v(" "),s("td",[t._v("\n复制程序命名行参数（称为命令尾）到一个字节数组")])]),t._v(" "),s("tr",[s("td",[t._v("\nGetDateTime")]),t._v(" "),s("td",[t._v("\n从系统获取当前日期和时间")])]),t._v(" "),s("tr",[s("td",[t._v("\nGetMaxXY")]),t._v(" "),s("td",[t._v("\n返回控制台窗口缓冲器的行数和列数")])]),t._v(" "),s("tr",[s("td",[t._v("\nGetMseconds")]),t._v(" "),s("td",[t._v("\n返回从午夜开始经过的毫秒数")])]),t._v(" "),s("tr",[s("td",[t._v("\nGetTextColor")]),t._v(" "),s("td",[t._v("\n返回当前控制台窗口的前景色和背景色")])]),t._v(" "),s("tr",[s("td",[t._v("\nGotoxy")]),t._v(" "),s("td",[t._v("\n将光标定位到控制台窗口内指定的位置")])]),t._v(" "),s("tr",[s("td",[t._v("\nIsDigit")]),t._v(" "),s("td",[t._v("\n如果 AL 寄存器中包含了十进制数字（0-9）的 ASCII 码，则零标志位置 1")])]),t._v(" "),s("tr",[s("td",[t._v("\nMsgBox")]),t._v(" "),s("td",[t._v("\n显示一个弹出消息框")])]),t._v(" "),s("tr",[s("td",[t._v("\nMsgBoxAsk")]),t._v(" "),s("td",[t._v("\n在弹出消息框中显示 yes/no 问题")])]),t._v(" "),s("tr",[s("td",[t._v("\nOpenlnputFile")]),t._v(" "),s("td",[t._v("\n打开一个已有磁盘文件进行输入操作")])]),t._v(" "),s("tr",[s("td",[t._v("\nParseDecimal32")]),t._v(" "),s("td",[t._v("\n将一个无符号十进制整数字符串转换为 32 位二进制数")])]),t._v(" "),s("tr",[s("td",[t._v("\nParselnteger32")]),t._v(" "),s("td",[t._v("\n将一个有符号十进制整数字符串转换为 32 位二进制数")])]),t._v(" "),s("tr",[s("td",[t._v("\nRandom32")]),t._v(" "),s("td",[t._v("\n在 0〜FFFFFFFFh 范围内，生成一个 32 位的伪随机整数")])]),t._v(" "),s("tr",[s("td",[t._v("\nRandomize")]),t._v(" "),s("td",[t._v("\n用一个值作为随机数生成器的种子")])]),t._v(" "),s("tr",[s("td",[t._v("\nRandomRange")]),t._v(" "),s("td",[t._v("\n在特定范围内生成一个伪随机整数")])]),t._v(" "),s("tr",[s("td",[t._v("\nReadChar")]),t._v(" "),s("td",[t._v("\n等待从键盘输入一个字符，并返回该字符")])]),t._v(" "),s("tr",[s("td",[t._v("\nReadDec")]),t._v(" "),s("td",[t._v("\n从键盘读取一个无符号 32 位十进制整数，用回车符结束")])]),t._v(" "),s("tr",[s("td",[t._v("\nReadFromFile")]),t._v(" "),s("td",[t._v("\n将一个输入磁盘文件读入缓冲区")])]),t._v(" "),s("tr",[s("td",[t._v("\nReadHex")]),t._v(" "),s("td",[t._v("\n从键盘读取一个 32 位十六进制整数，用回车符结束")])]),t._v(" "),s("tr",[s("td",[t._v("\nReadlnt")]),t._v(" "),s("td",[t._v("\n从键盘读取一个有符号 32 位十进制整数，用回车符结束")])]),t._v(" "),s("tr",[s("td",[t._v("\nReadKey")]),t._v(" "),s("td",[t._v("\n无需等待输入即从键盘输入缓冲区读取一个字符")])]),t._v(" "),s("tr",[s("td",[t._v("\nReadString")]),t._v(" "),s("td",[t._v("\n从键盘读取一个字符串，用回车符结束")])]),t._v(" "),s("tr",[s("td",[t._v("\nSetTextColor")]),t._v(" "),s("td",[t._v("\n设置控制台输出字符的前景色和背景色")])]),t._v(" "),s("tr",[s("td",[t._v("\nStr_compare")]),t._v(" "),s("td",[t._v("\n比较两个字符串")])]),t._v(" "),s("tr",[s("td",[t._v("\nStr_copy")]),t._v(" "),s("td",[t._v("\n将源字符串复制到目的字符串")])]),t._v(" "),s("tr",[s("td",[t._v("\nStr_length")]),t._v(" "),s("td",[t._v("\n用 EAX 返回字符串长度")])]),t._v(" "),s("tr",[s("td",[t._v("\nStr_trim")]),t._v(" "),s("td",[t._v("\n从字符串删除不需要的字符")])]),t._v(" "),s("tr",[s("td",[t._v("\nStr_ucase")]),t._v(" "),s("td",[t._v("\n将字符串转换为大写字母")])]),t._v(" "),s("tr",[s("td",[t._v("\nWaitMsg")]),t._v(" "),s("td",[t._v("\n显示信息并等待按键操作")])]),t._v(" "),s("tr",[s("td",[t._v("\nWriteBin")]),t._v(" "),s("td",[t._v("\n用 ASCII 二进制格式，向控制台窗口写一个无符号 32 位整数")])]),t._v(" "),s("tr",[s("td",[t._v("\nWriteBinB")]),t._v(" "),s("td",[t._v("\n用字节、字或双字格式向控制台窗口写一个二进制整数")])]),t._v(" "),s("tr",[s("td",[t._v("\nWriteChar")]),t._v(" "),s("td",[t._v("\n在控制台窗口写一个字符")])]),t._v(" "),s("tr",[s("td",[t._v("\nWriteDec")]),t._v(" "),s("td",[t._v("\n用十进制格式，向控制台窗口写一个无符号 32 位整数")])]),t._v(" "),s("tr",[s("td",[t._v("\nWriteHex")]),t._v(" "),s("td",[t._v("\n用十六进制格式，向控制台窗口写一个 32 位整数")])]),t._v(" "),s("tr",[s("td",[t._v("\nWriteHexB")]),t._v(" "),s("td",[t._v("\n用十六进制格式，向控制台窗口写一个字节、字或双字整数")])]),t._v(" "),s("tr",[s("td",[t._v("\nWritelnt")]),t._v(" "),s("td",[t._v("\n用十进制格式，向控制台窗口写一个有符号 32 位整数")])]),t._v(" "),s("tr",[s("td",[t._v("\nWriteStackFrame")]),t._v(" "),s("td",[t._v("\n向控制台窗口写当前过程的堆栈帧")])]),t._v(" "),s("tr",[s("td",[t._v("\nWriteStackFrameName")]),t._v(" "),s("td",[t._v("\n向控制台窗口写当前过程的名称和堆栈帧")])]),t._v(" "),s("tr",[s("td",[t._v("\nWriteString")]),t._v(" "),s("td",[t._v("\n向控制台窗口写一个以空字符结束的字符串")])]),t._v(" "),s("tr",[s("td",[t._v("\nWriteToFile")]),t._v(" "),s("td",[t._v("\n将缓冲区内容写入一个输出文件")])]),t._v(" "),s("tr",[s("td",[t._v("\nWriteWindowsMsg")]),t._v(" "),s("td",[t._v("\n显示一个字符串，包含 MS-Windows 最近一次产生的错误")])])])])])])}),[],!1,null,null,null);n.default=r.exports}}]);