(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{427:function(t,s,a){"use strict";a.r(s);var n=a(62),p=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"高级函数过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高级函数过程"}},[t._v("#")]),t._v(" 高级函数过程")]),t._v(" "),a("h2",{attrs:{id:"堆栈传参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆栈传参"}},[t._v("#")]),t._v(" 堆栈传参")]),t._v(" "),a("p",[t._v("之前参数是寄存器上面,到由于用寄存器的太占位置，且容易更改到寄存器的值，所以后面\n建议使用堆栈传参")]),t._v(" "),a("p",[t._v("一般来说ebp 是堆栈参数的基址  而esp则是堆栈的基址")]),t._v(" "),a("ol",[a("li",[t._v("参数\n对于传参将指向rsp 栈基址 的上方 ,一下示例传参了\na和b 并且求和")])]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("addTwo proc\nmov dword ptr "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("rsp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ecx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmov dword ptr "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("rsp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("h"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("edx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v("位堆栈距离"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("字节 \npush rbp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nmov rbp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rsp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\nmovzx rax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("word ptr "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("rbp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" push rbp后还得"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\nmovzx rbx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("word ptr "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("rbp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" push rbp后还得"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\nadd rax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rbx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\npop rbp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\naddTwo endp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),a("p",[a("img",{attrs:{src:"/img_11.png",alt:"image"}}),t._v("\n对于堆栈地址 越往上地址越大 切64位地址 需要+8个字节的地址符号\n2. 局部变量\n一般来说局部变量是存在栈空间的 也就是基于esp栈空间下的")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("localVariable proc\n\tpush rbp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tmov rbp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rsp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tsub rsp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//堆栈扩展指针 16字节 准备填充局部变量 ")]),t._v("\n\n\tmov dword ptr "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("rbp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 局部变量a\n\tmov dword ptr "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("rbp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 局部变量b\n\n\tmov eax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("dword ptr "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("rbp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\tmov ebx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("dword ptr "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("rbp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\tmov rsp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rbp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 重置指针 删除局部变量 且pop rbp可还原\n\n\tadd eax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ebx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b\n\n\tpop rbp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n\tret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nlocalVariable endp \n")])])]),a("h2",{attrs:{id:"lea"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lea"}},[t._v("#")]),t._v(" LEA")]),t._v(" "),a("p",[t._v("LEA用来获取间接操作数地址\n与OFFSET 类似 但OFFSET只能获取已知的.DATA 变量地址\n而LEA 可以真正获取值的内存偏移地址")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("lea esi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ebp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=p.exports}}]);