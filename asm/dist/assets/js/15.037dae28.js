(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{428:function(a,t,s){"use strict";s.r(t);var n=s(62),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"asm运算符和指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#asm运算符和指令"}},[a._v("#")]),a._v(" asm运算符和指令")]),a._v(" "),s("h2",{attrs:{id:"mov"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mov"}},[a._v("#")]),a._v(" mov")]),a._v(" "),s("p",[a._v("mov 赋值指令 从右值赋值与左值\n"),s("code",[a._v("MOV EAX,XXX")])]),a._v(" "),s("ol",[s("li",[a._v("不同寄存器的赋值\n下面示例从低位寄存器到高位寄存器")])]),a._v(" "),s("div",{staticClass:"language-asm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(".data\nhexFill DWORD 0ffffffffh;\n\n.code\nlowerRegister PROC\nmov eax,hexFill; //eax为十六进制的ffffffff 占满了8个字节 32位数据\nmov ax,0; //设置16位 寄存器的值为0  结果为: eax:ffff0000\nret; //弹出栈顶eax寄存器\n\nlowerRegister ENDP;\n\nEND;\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("扩展形式的mov")])]),a._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[a._v("movzx eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("A69Bh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//全零形式补充 自动补充为0000A69BH ")]),a._v("\n")])])]),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[a._v("movsx eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("A69BH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//有符号形式的扩展 自动补充为FFFFA69BH")]),a._v("\n")])])]),s("h2",{attrs:{id:"xchg-交换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xchg-交换"}},[a._v("#")]),a._v(" xchg 交换")]),a._v(" "),s("p",[a._v("用来交换寄存器的值")]),a._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[a._v("lowerRegister ENDP"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\nexchange PROC\nmov ebx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("999")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nmov eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("888")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nxchg eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("ebx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//交换eax 和ebx")]),a._v("\nret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nexchange endp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h2",{attrs:{id:"偏移操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#偏移操作"}},[a._v("#")]),a._v(" 偏移操作")]),a._v(" "),s("p",[a._v("偏移操作通过"),s("code",[a._v("[地址+偏移]")]),a._v(" 获取其中的值")]),a._v(" "),s("p",[a._v("现在我们定义一个数组来试试")]),a._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("data\ndwarray DWORD "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0F")]),a._v("h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0FF")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0FFF")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("000")]),a._v("h\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("code\noperationOffset PROC\nmov eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("dwarray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nadd eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("dwarray "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//DWORD占4个字节")]),a._v("\nadd eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("dwarray "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//结果为0F+0FF0+0FFF000 = 0FFFFFF =  16,777,215")]),a._v("\n\noperationOffset ENDP"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\nend"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n")])])]),s("h2",{attrs:{id:"运算指令和标识符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算指令和标识符"}},[a._v("#")]),a._v(" 运算指令和标识符")]),a._v(" "),s("p",[a._v("CPU常见的标志位有:")]),a._v(" "),s("ol",[s("li",[a._v("运算标志位")])]),a._v(" "),s("ul",[s("li",[a._v("CF(Carry Flag进位标志位) 1产生进位或错位 反之0")]),a._v(" "),s("li",[a._v("PF(Parity Flag 奇偶标志位) 1 为偶数个1 0 为 奇数个1")]),a._v(" "),s("li",[a._v("AF(Auxiliary Flag 辅助进位标志位) 最后4位有前进位1 反之0")]),a._v(" "),s("li",[a._v("ZF(zero flag 零标志位) 结果有0 为1 反之0")]),a._v(" "),s("li",[a._v("SF(Sing flag 符号标志位) 整数0 负数1")]),a._v(" "),s("li",[a._v("0F(overflow flag 溢出标志位) 加减法得出结果溢出为 1 反之0")])]),a._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[a._v("状态标志位")])]),a._v(" "),s("ul",[s("li",[a._v("TF(追踪标志位)")]),a._v(" "),s("li",[a._v("IF(中断标志位)")]),a._v(" "),s("li",[a._v("DF(方向标志位)")])]),a._v(" "),s("p",[a._v("Visual Studio 汇编标志位有点不同:")]),a._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[a._v("OV  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" OF\nUP "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" DF \nEI "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" IF\nPL "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" SF\nZR "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" ZF\nAC "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" AF\nPE "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" PF \nCY "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" CF\n")])])]),s("h2",{attrs:{id:"inc-dec"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inc-dec"}},[a._v("#")]),a._v(" INC DEC")]),a._v(" "),s("p",[a._v("先看看最简单的")]),a._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[a._v("inc 自增\ndec 自减\n")])])]),s("p",[a._v("下面代码会自增自减并返回")]),a._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("data\ntmp DWORD "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("code\n\nincAndDec PROC\ninc tmp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//11H")]),a._v("\nmov eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("tmp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \ndec eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//10H")]),a._v("\nret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nincAndDec ENDP"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\nend"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("当我们执行完\n"),s("code",[a._v("inc tmp")]),a._v(" 从 "),s("code",[a._v("00000010")]),a._v(" 到 "),s("code",[a._v("00000011")]),a._v("\n奇偶标志位应为1"),s("code",[a._v("PF(parity flag) = 1")])]),a._v(" "),s("p",[a._v("在执行完\n"),s("code",[a._v("dec eax")]),a._v("\n```(PF)``标志位应为0")]),a._v(" "),s("h2",{attrs:{id:"add-加指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-加指令"}},[a._v("#")]),a._v(" ADD 加指令")]),a._v(" "),s("p",[a._v("我们在看看add指令:")]),a._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[a._v("addFlag PROC\nmov eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0ff")]),a._v("h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nadd eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\naddFlag ENDP\n")])])]),s("ul",[s("li",[a._v("执行到"),s("code",[a._v("mov eax,0ffh;")]),a._v(" 那么0xff = 1111 1111 偶数位的1 PF=1")]),a._v(" "),s("li",[a._v("执行到"),s("code",[a._v("add eax,1h;")]),a._v(" 那么就从 1111 1111 到了 1 0000 0000 有进位那么AF=1")])]),a._v(" "),s("h2",{attrs:{id:"sub-减指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sub-减指令"}},[a._v("#")]),a._v(" SUB 减指令")]),a._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[a._v("subFlag PROC\nmov eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("011")]),a._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nsub eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nsubFlag ENDP\n")])])]),s("h2",{attrs:{id:"mul-乘指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mul-乘指令"}},[a._v("#")]),a._v(" MUL 乘指令")]),a._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[a._v("mov eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nmov ebx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nmul eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("ebx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h2",{attrs:{id:"div-除指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#div-除指令"}},[a._v("#")]),a._v(" DIV 除指令")]),a._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[a._v("mov eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nmov ebx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\ndiv eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("ebx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h2",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[a._v("#")])]),a._v(" "),s("ul",[s("li",[a._v("执行到 "),s("code",[a._v("mov eax,0b")]),a._v(" PF = 0")]),a._v(" "),s("li",[a._v("执行到 "),s("code",[a._v("sub eax,1b")]),a._v(" EAX = FFFFFFFF 那么 SF = 1(sing flag 符号变负数)\nAF = (auxiliary flag 后4位进位) PF(parity 偶数) = 1 CF(进位) = 1")])]),a._v(" "),s("h2",{attrs:{id:"neg-非指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#neg-非指令"}},[a._v("#")]),a._v(" NEG 非指令")]),a._v(" "),s("p",[a._v("非指令 获得一个数的补码也就是该数的负数")]),a._v(" "),s("blockquote",[s("p",[a._v("取反 + 1 是一个数的补码 也是一个数的反数 用来加上一个数的负数 = 0")])]),a._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[a._v("negFlag PROC\nmov eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nneg eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nnegFlag endp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("ul",[s("li",[a._v("执行到 neg eax; eax = FFFFFFFF 那么 SF(负数) = 1 AF(辅助进位) = 1 CF(进位) = 1")])]),a._v(" "),s("h2",{attrs:{id:"offset-地址偏移"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#offset-地址偏移"}},[a._v("#")]),a._v(" offset 地址偏移")]),a._v(" "),s("p",[a._v("offset用来获取一个数句标号的起始地址")]),a._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("data\ndarray DWORD "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0F")]),a._v("h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0FF")]),a._v("h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0FFF")]),a._v("h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0FFF")]),a._v("h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("code \noffsetOp PROC\nmov rsi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("OFFSET darray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nmov rdi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("rsi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nadd rdi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nadd rdi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nmov eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("rdi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\noffsetOp endp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("上面做了如下操作:")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("mov rsi,OFFSET darray")]),a._v(" 复制给rsi darray数据地址")]),a._v(" "),s("li",[s("code",[a._v("mov rdi,rsi")]),a._v(" 转给edi准备变换源地址")]),a._v(" "),s("li",[s("code",[a._v("add rdi,4; add rdi,8;")]),a._v(" rdi+12 跳到 darray最后一个 (dword占4字节)")]),a._v(" "),s("li",[s("code",[a._v("mov eax,[rdi]")]),a._v(" 间接寻址rdi地址的值")])]),a._v(" "),s("h2",{attrs:{id:"ptr-重写类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ptr-重写类型"}},[a._v("#")]),a._v(" PTR 重写类型")]),a._v(" "),s("p",[a._v("ptr 重写操作数数据类型")]),a._v(" "),s("p",[a._v("以上一个例子来说,当我们想把一个高位数存在低位数的寄存器中:")]),a._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[a._v("ptrOp PROC\nmov rsi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("OFFSET darray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nmov rdi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("rsi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nadd rdi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nmov rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("QWORD ptr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("rdi"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//注意这里eax 改成rax,且类型数据转换为QWORD")]),a._v("\nret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nptrOp endp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h2",{attrs:{id:"type-元素大小"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type-元素大小"}},[a._v("#")]),a._v(" type 元素大小")]),a._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[a._v("typeOp PROC\nmov rsi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("OFFSET darray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nmov eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("type rsi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//得到的是8个字节")]),a._v("\ntypeOp endp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n")])])]),s("h2",{attrs:{id:"lengthof-数组个数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lengthof-数组个数"}},[a._v("#")]),a._v(" lengthof 数组个数")]),a._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[a._v("lengthofOp proc\nmov eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("lengthof darray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nlengthofOp endp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h2",{attrs:{id:"jmp跳转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jmp跳转"}},[a._v("#")]),a._v(" JMP跳转")]),a._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[a._v("jumOp proc\njmp lengthofOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//直接跳到之前的操作")]),a._v("\njumOp endp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h2",{attrs:{id:"loop-循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#loop-循环"}},[a._v("#")]),a._v(" loop 循环")]),a._v(" "),s("p",[a._v("也被称为ecx 计数循环")]),a._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[a._v("loopOp proc\nmov eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nmov ecx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\nL1"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n  inc eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  loop L1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//计数循环ecx5次")]),a._v("\n\nret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//eax结果为5")]),a._v("\nloopOp endp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);