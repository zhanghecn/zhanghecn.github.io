(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{422:function(t,a,s){"use strict";s.r(a);var n=s(62),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"汇编条件跳转判断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#汇编条件跳转判断"}},[t._v("#")]),t._v(" 汇编条件跳转判断")]),t._v(" "),s("h2",{attrs:{id:"基本介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本介绍"}},[t._v("#")]),t._v(" 基本介绍")]),t._v(" "),s("p",[t._v("汇编有4种布尔指令")]),t._v(" "),s("ul",[s("li",[t._v("AND 进行并的操作")]),t._v(" "),s("li",[t._v("OR 或的操作")]),t._v(" "),s("li",[t._v("XOR 异或操作")]),t._v(" "),s("li",[t._v("NOT 非操作")]),t._v(" "),s("li",[t._v("TEST 与操作 破坏性的AND操作")])]),t._v(" "),s("p",[t._v("bool指令影响零的标记位(ZF Zero Flag)(0为true 1为false)")]),t._v(" "),s("p",[t._v("回顾一下")]),t._v(" "),s("ol",[s("li",[t._v("结果为0的时,ZF=1 (Zero Flag)")]),t._v(" "),s("li",[t._v("最高位有进位时,CF=1 ( Carry Flag)")]),t._v(" "),s("li",[t._v("计算结果有负数时,SF=1 (Sign Flag)")]),t._v(" "),s("li",[t._v("产生结果超出有符号数时,OF=1(overflow flag)")]),t._v(" "),s("li",[t._v("结果二进制的1出现偶数,PF=1(parity flag)")])]),t._v(" "),s("h2",{attrs:{id:"and-和-not"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#and-和-not"}},[t._v("#")]),t._v(" AND 和 NOT")]),t._v(" "),s("p",[t._v("and指令总是会清除标志位 OF (overflow flag) 和 CF(carry flag)")]),t._v(" "),s("p",[s("strong",[t._v("使用and 符号将小写转换为大写")])]),t._v(" "),s("ul",[s("li",[t._v("大写字母距离小写字母差20h 也就 32(10进制)")]),t._v(" "),s("li",[t._v("转换二进制也就是 10 0000 补码也就是   1110 1100")]),t._v(" "),s("li",[t._v("我们从小写转换大写也就是二进制要减去10 0000")]),t._v(" "),s("li",[t._v("AND符号的特性就是 "),s("code",[t._v("1 and 1 = 1")]),t._v(" "),s("code",[t._v("1 and 0 = 0")])])]),t._v(" "),s("ol",[s("li",[t._v("我们以1个字节站8个bit来相减看看")])]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0110")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0001")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1110")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0100")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0001")]),t._v("   \n 去掉高位\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0100")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0001")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("41")]),t._v("h\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("但如果用AND和NOT呢？")])]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("61")]),t._v("h "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nAND  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" NOT "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0010")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" 反码"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("41")]),t._v("h "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'A'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("由于刚好20h=32 是2的幂次方数 "),s("code",[t._v("1 00 0000")]),t._v("\n那么减去 "),s("code",[t._v("1 00 0000")]),t._v(" 且保留 后面的位数就很容易了")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("使用and 符号 用反码就很容易保留后面位数的"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("两个"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("为"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1101")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1111")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" NOT "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0010")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1101")]),t._v("  \n")])])])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("汇编代码如下")])]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("uCase proc\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("获取反码\n\tmov rbx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tnot rbx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("and 去掉 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" \n\tmov al"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tand eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ebx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\tret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nuCase endp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"or"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#or"}},[t._v("#")]),t._v(" OR")]),t._v(" "),s("p",[t._v("or 就是遇到1则为1\n如  0 1001 or 0 1100 = 0 1101")]),t._v(" "),s("p",[t._v("汇编指令")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("mov al"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nor al"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("标志位情况:")]),t._v(" "),s("ul",[s("li",[t._v("al > 0  : SF = 0  ZF = 0")]),t._v(" "),s("li",[t._v("al = 0  : SF = 0  ZF =1")]),t._v(" "),s("li",[t._v("al < 0  : SF = 1  ZF = 0")])]),t._v(" "),s("h2",{attrs:{id:"xor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xor"}},[t._v("#")]),t._v(" XOR")]),t._v(" "),s("p",[t._v("异或 就是不一样 为 1 一样为 0\n如:")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("mov al"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("011")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nxor al"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("011")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果为000")]),t._v("\n\nxor al"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("011")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果 000 xor 011 = 011")]),t._v("\n")])])]),s("h2",{attrs:{id:"test"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#test"}},[t._v("#")]),t._v(" TEST")]),t._v(" "),s("p",[t._v("与and 不同的是，不会修改操作数 只会修改标志位")]),t._v(" "),s("h2",{attrs:{id:"cmp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cmp"}},[t._v("#")]),t._v(" CMP")]),t._v(" "),s("p",[t._v("cmp是个比较指令，也算个减法操作数,但并不会影响目标操作数的值")]),t._v(" "),s("p",[s("code",[t._v("cmp target,source")])]),t._v(" "),s("p",[t._v("其计算结果还会修改标志位:")]),t._v(" "),s("ul",[s("li",[t._v("target < source : ZF = 0 CF(负数的1是反码所以进位) = 1")]),t._v(" "),s("li",[t._v("target > source : ZF = 0 CF = 0")]),t._v(" "),s("li",[t._v("target = source : ZF = 1 CF = 0")])]),t._v(" "),s("p",[t._v("示例:")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("mov eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncmp eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("999")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ZF=0 CF = 1")]),t._v("\n")])])]),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("mov eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncmp eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ZF=1 CF = 0")]),t._v("\n")])])]),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("mov eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncmp eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ZF=0 CF = 0")]),t._v("\n")])])]),s("h2",{attrs:{id:"标志位的灵活设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标志位的灵活设置"}},[t._v("#")]),t._v(" 标志位的灵活设置")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("resetCPU proc\nmov eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnot eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//PF = 1 ")]),t._v("\ntest eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ZF = 1 SF = 0")]),t._v("\nor eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ZF = 0   SF = 1")]),t._v("\nxor eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0ffff")]),t._v("ffffh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ZF = 0 SF = 0 CF = 0")]),t._v("\nstc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//CF = 1")]),t._v("\nclc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//CF = 0")]),t._v("\n\nmov al"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7f")]),t._v("h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0111 1111  127")]),t._v("\ninc al"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1000 0000       -128    AF = 1 CF =1 OF =1")]),t._v("\nor eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OF=0")]),t._v("\n\nresetCPU endp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"标志位与条件跳转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标志位与条件跳转"}},[t._v("#")]),t._v(" 标志位与条件跳转")]),t._v(" "),s("p",[t._v("汇编语言中没有明显的逻辑判断执行,但可通过标志位来实现条件跳转\n一般来说可以通过 cmp,and,or,sub,add,xor 等来修改标志位来实现逻辑跳转")]),t._v(" "),s("ol",[s("li",[t._v("标志位跳转语句如下:")])]),t._v(" "),s("ul",[s("li",[t._v("JZ  :JMP ZF(zero flag)=1 跳转")]),t._v(" "),s("li",[t._v("JNZ :JMP ZF(zero flag)=0 跳转")]),t._v(" "),s("li",[t._v("JC  :JMP CF(carry flag 进位)=1 跳转")]),t._v(" "),s("li",[t._v("JNC  :JMP CF(carry flag 非进位)=1 跳转")]),t._v(" "),s("li",[t._v("JO   :JMP OF(overflow) = 1")]),t._v(" "),s("li",[t._v("JNO  :JMP OF(overflow) = 0")]),t._v(" "),s("li",[t._v("JS   :JMP SF(sign) = 1")]),t._v(" "),s("li",[t._v("JNS   :JMP SF(sign) = 0")]),t._v(" "),s("li",[t._v("JP    :JMP PF(parity) = 1")]),t._v(" "),s("li",[t._v("JNP   :JMP PF(parity) = 0")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("其中还有相等性位")])]),t._v(" "),s("ul",[s("li",[t._v("JL   :JMP LESS ZF!=0 小于跳转")]),t._v(" "),s("li",[t._v("JG   :JMP GREATER ZF!=0 大于跳转")]),t._v(" "),s("li",[t._v("JE   :JMP equals 相等跳转")]),t._v(" "),s("li",[t._v("JNE  :JMP 不相等跳转")]),t._v(" "),s("li",[t._v("JECXZ :JMP ECX = 0 跳转")]),t._v(" "),s("li",[t._v("JGE  :grater equals 大于等于跳转")]),t._v(" "),s("li",[t._v("JLE  : less than equals 小于等于")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("示例\n求3个数中最大数:")])]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code\nmax proc\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("参数放入堆栈\npush rcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\npush rdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\npush r8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\npop rdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" c\npop rbx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" b \npop rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" a\n\ncmp rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rbx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\njg L1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" a\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("b大于a AB互换\nL1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n mov rcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rbx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" rcx用来临时存储互换\n mov rbx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n mov rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n cmp rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("a\n jg L2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("c大于a ac互换\nL2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n mov rcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n mov rdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n mov rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\nret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmax endp\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("示例 求数组第一个不为0的下标")])]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("findNz proc\npush rcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\npush rdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\npop rcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("计数循环\npop rsi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("数组指针\n\nmov rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("下标计数\n\nL1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  cmp dword ptr "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("rsi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  jnz found"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ZF"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  inc rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  add rsi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("type DWORD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  loop L1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ntest eax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ZF=1")]),t._v("\njz noFound"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n\nfound"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\tret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 找到的话直接返回eax下标   \n\nnoFound"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\tmov ax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000001")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tmovsx rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("未找到返回"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\nret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfindNz endp\n")])])]),s("h2",{attrs:{id:"条件循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件循环"}},[t._v("#")]),t._v(" 条件循环")]),t._v(" "),s("ul",[s("li",[t._v("LOOPZ或LOOPE ZF=0跳转循环")])])])}),[],!1,null,null,null);a.default=r.exports}}]);